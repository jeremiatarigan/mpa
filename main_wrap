// main_wrap.dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Wrap Demo',
      theme: ThemeData(
        primarySwatch: Colors.green,
      ),
      home: const WrapScreen(),
    );
  }
}

class WrapScreen extends StatefulWidget {
  const WrapScreen({super.key});

  @override
  State<WrapScreen> createState() => _WrapScreenState();
}

class _WrapScreenState extends State<WrapScreen> {
  final List<String> _tags = [
    'Flutter',
    'Dart',
    'Widget',
    'UI Design',
    'Mobile App',
    'Cross-Platform',
    'Development',
    'Programming',
    'Material Design',
    'Community',
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Wrap Example'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            const Text(
              'Contoh penggunaan Wrap:',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 10),
            // Contoh 1: Wrap sederhana dengan Chip
            Wrap(
              spacing: 8.0, // Jarak horizontal antar child
              runSpacing: 4.0, // Jarak vertikal antar baris
              children: _tags.map((tag) {
                return Chip(
                  label: Text(tag),
                  backgroundColor: Colors.green[100],
                  padding: const EdgeInsets.all(8.0),
                );
              }).toList(),
            ),
            const SizedBox(height: 30),

            const Text(
              'Contoh dengan alignment dan direction:',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 10),
            // Contoh 2: Mengatur alignment dan direction
            Wrap(
              alignment: WrapAlignment.center, // Pusatkan child secara horizontal
              direction: Axis.horizontal, // Arah pembungkus (horizontal default)
              spacing: 10.0,
              runSpacing: 10.0,
              children: List.generate(
                15,
                (index) => Container(
                  width: 50,
                  height: 50,
                  color: Colors.blue[(index % 9) * 100 + 100],
                  child: Center(
                    child: Text(
                      '${index + 1}',
                      style: const TextStyle(color: Colors.white),
                    ),
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
